{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"d",
				"draw"
			],
			[
				"ent",
				"entities"
			],
			[
				"re",
				"resource"
			],
			[
				"reg",
				"region"
			],
			[
				"add",
				"add_layer"
			],
			[
				"resou",
				"resource"
			],
			[
				"set",
				"setColor"
			],
			[
				"tile",
				"tilemap"
			],
			[
				"tilem",
				"tilemap"
			],
			[
				"text",
				"texture_coords"
			],
			[
				"resour",
				"resources"
			],
			[
				"grid",
				"gridCoords"
			],
			[
				"clon",
				"clone_sound"
			],
			[
				"Projec",
				"ProjectSelect"
			],
			[
				"blocks",
				"blocksize"
			],
			[
				"cell",
				"cell_dimensions"
			],
			[
				"cell_",
				"cell_width"
			],
			[
				"c",
				"canvas"
			],
			[
				"block",
				"blocksize"
			],
			[
				"Ini",
				"InfiniteCanvas"
			],
			[
				"blo",
				"blocksize"
			],
			[
				"sam",
				"sample_freehand"
			],
			[
				"des",
				"description"
			],
			[
				"cli",
				"clicks"
			],
			[
				"erase",
				"eraser"
			],
			[
				"bursh",
				"brushsize"
			],
			[
				"reso",
				"resource"
			],
			[
				"to",
				"toolbox"
			],
			[
				"pa",
				"panels"
			],
			[
				"hight",
				"highlight"
			],
			[
				"save",
				"savesplash"
			],
			[
				"file",
				"filesystem"
			],
			[
				"new",
				"newQuad"
			],
			[
				"get",
				"getViewport"
			],
			[
				"B",
				"BLOCK_SIZE"
			],
			[
				"tol",
				"tooltip"
			],
			[
				"tool",
				"tooltip"
			],
			[
				"nope",
				"nopesound"
			],
			[
				"sel",
				"selectscroller"
			],
			[
				"ke",
				"keyboard"
			],
			[
				"flat",
				"flattened"
			],
			[
				"Pixel",
				"PixelTab"
			],
			[
				"el",
				"element"
			],
			[
				"elem",
				"elements"
			],
			[
				"colour",
				"colour_count"
			],
			[
				"export",
				"export_thread"
			],
			[
				"proje",
				"project_folder"
			],
			[
				"expor",
				"export_thread"
			],
			[
				"pro",
				"process_notebox"
			],
			[
				"con",
				"conditions"
			],
			[
				"char",
				"character"
			],
			[
				"path",
				"path"
			],
			[
				"ch",
				"Character"
			],
			[
				"oc",
				"occupiers"
			],
			[
				"occu",
				"occupiers"
			],
			[
				"prot",
				"prototype"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"max",
				"max_x"
			],
			[
				"min",
				"min_x"
			],
			[
				"globa",
				"global_trigger"
			],
			[
				"rec",
				"rectangle"
			],
			[
				"upda",
				"update_tree"
			],
			[
				"ann",
				"annotation"
			],
			[
				"Scripting",
				"ScriptiongLayer"
			],
			[
				"curs",
				"cursor"
			],
			[
				"cursor",
				"cursor_lines"
			],
			[
				"cur",
				"cursor_lines"
			],
			[
				"pr",
				"preview"
			],
			[
				"de",
				"description"
			],
			[
				"res",
				"resources"
			],
			[
				"apply",
				"applyBrush"
			],
			[
				"wal",
				"wall_index"
			],
			[
				"reo",
				"resource_to_id"
			],
			[
				"ref",
				"refresh"
			],
			[
				"rot",
				"root_directory"
			],
			[
				"reou",
				"resource"
			],
			[
				"annota",
				"annotation"
			],
			[
				"resource",
				"resourcemanager"
			],
			[
				"refer",
				"reference"
			],
			[
				"gr",
				"gridCoords"
			],
			[
				"Project",
				"ProjectPanel"
			],
			[
				"anno",
				"annotations"
			],
			[
				"rect",
				"rect_rect"
			],
			[
				"liste",
				"listeners"
			],
			[
				"ls",
				"listener"
			],
			[
				"lis",
				"listener"
			],
			[
				"project",
				"projectselect"
			],
			[
				"SETPROJ",
				"SETPROJECT"
			],
			[
				"zoom",
				"zoom_level"
			],
			[
				"com",
				"components"
			],
			[
				"Scrip",
				"ScriptLayer"
			],
			[
				"INT",
				"INTERFACE"
			],
			[
				"Int",
				"Interface"
			],
			[
				"INTE",
				"INTERFACE_"
			],
			[
				"mouse",
				"mousepressed"
			],
			[
				"world",
				"world_delta"
			],
			[
				"screen",
				"screen_delta"
			],
			[
				"remove",
				"removeEntity"
			],
			[
				"ne",
				"newSource"
			],
			[
				"st",
				"startPos"
			],
			[
				"hr",
				"hrad_extremum"
			],
			[
				"l",
				"local	local x = 1"
			],
			[
				"or",
				"original"
			],
			[
				"ty",
				"typing_sound"
			],
			[
				"k",
				"keypressed"
			],
			[
				"DR",
				"DRAGDELETEMODE"
			],
			[
				"not",
				"notebox"
			],
			[
				"Anno",
				"AnnotateMode"
			],
			[
				"wall",
				"wall_index"
			],
			[
				"key",
				"keyboard"
			],
			[
				"lock",
				"locked_entity"
			],
			[
				"parse",
				"parseLink"
			],
			[
				"sour",
				"source_pixel"
			],
			[
				"app",
				"applyBrush"
			],
			[
				"newIm",
				"newImageData"
			],
			[
				"canva",
				"canvas"
			],
			[
				"ren",
				"renderTo"
			],
			[
				"love",
				"love-binary-win"
			],
			[
				"exp",
				"exporters"
			],
			[
				"copy",
				"copyFile"
			],
			[
				"entit",
				"entities"
			],
			[
				"C",
				"CAMERA"
			],
			[
				"remo",
				"removeDirectory"
			],
			[
				"cop",
				"copyFile"
			],
			[
				"ex",
				"export_test"
			],
			[
				"enti",
				"entitylayer"
			],
			[
				"se",
				"selected"
			],
			[
				"en",
				"entitylayer_path"
			]
		]
	},
	"buffers":
	[
		{
			"file": "engine/player.lua",
			"settings":
			{
				"buffer_size": 5442,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 410 files for \"ProjectPanel\" (regex, case sensitive)\n\nC:\\Users\\ragzouken\\Google Drive\\LOVE\\kooltool\\editor.lua:\n   11  local Project = require \"components.project\"\n   12  local ProjectSelect = require \"interface.panels.projectselect\"\n   13: local ProjectPanel = require \"interface.panels.project\"\n   14  local Toolbox = require \"interface.toolbox.toolbox\"\n   15  local MenuBar = require \"interface.panels.menubar\"\n   ..\n  198      self.view.camera:lookAt(128, 128)\n  199  \n  200:     local projectedit = ProjectPanel(project, { x = 128, y = -256 })\n  201      projectedit.actions[\"drag\"] = true\n  202      project:add(projectedit)\n\nC:\\Users\\ragzouken\\Google Drive\\LOVE\\kooltool\\interface\\panels\\newproject.lua:\n    4  local generators = require \"generators\"\n    5  \n    6: local NewProjectPanel = Class {\n    7      __includes = elements.Panel,\n    8      name = \"kooltool new project panel\",\n    .\n   10  }\n   11  \n   12: function NewProjectPanel:init(project, params, new)\n   13      elements.Panel.init(self, {\n   14          x = params.x, y = params.y,\n   ..\n  120  end\n  121  \n  122: return NewProjectPanel\n  123  \n\nC:\\Users\\ragzouken\\Google Drive\\LOVE\\kooltool\\interface\\panels\\project.lua:\n    2  local elements = require \"interface.elements\"\n    3  \n    4: local ProjectPanel = Class {\n    5      __includes = elements.Panel,\n    6      name = \"kooltool project panel\",\n    .\n    8  }\n    9  \n   10: function ProjectPanel:init(project, params)\n   11      elements.Panel.init(self, {\n   12          x = params.x, y = params.y,\n   ..\n   67  end\n   68  \n   69: return ProjectPanel\n   70  \n\nC:\\Users\\ragzouken\\Google Drive\\LOVE\\kooltool\\interface\\panels\\projectselect.lua:\n    2  local elements = require \"interface.elements\"\n    3  \n    4: local ProjectPanel = require \"interface.panels.project\"\n    5: local NewProjectPanel = require \"interface.panels.newproject\"\n    6  \n    7  local ProjectSelect = Class {\n    .\n   45          end\n   46  \n   47:         local panel = ProjectPanel(project, { x = 0, y = (i - 1) * 64 })\n   48          panel:add(button(project_clicked, project.name))\n   49          self:add(panel)\n   ..\n   61      end\n   62  \n   63:     local panel = NewProjectPanel(project, { x = 0, y = #projects * 64 }, clicked)\n   64      self:add(panel)\n   65  end\n\n12 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 2317,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"contents": "local Class = require \"hump.class\"\nlocal json = require \"utilities.dkjson\"\n\nlocal Queue = Class {}\n\nfunction Queue:init()\n    self.first = nil\n    self.last  = nil\n    self.items = {}\nend\n\nfunction Queue:push(item)\n    if not self.first then\n        self.first, self.last = 1, 1\n    else\n        self.last = self.last + 1\n    end\n\n    self.items[self.last] = item\nend\n\nfunction Queue:pop()\n    if not self.first then\n        return nil\n    end\n\n    local item = self.items[self.first]\n\n    if self.first == self.last then\n        self.first, self.last = nil, nil\n    else\n        self.first = self.first + 1\n    end\n\n    return item\nend\n\nfunction Queue:consume()\n    return coroutine.wrap(function()\n        while self.first ~= nil do\n            coroutine.yield(self:pop())\n        end\n    end)\nend\n\nlocal ResourceManager = Class {}\n\nfunction ResourceManager:init(root, ...)\n    self.root = root\n    self.types = {}\n\n    for i, class in ipairs{...} do\n        self.types[class.type or \"INVALID\"] = class\n    end\n\n    self.count = 0\n    self.id_to_resource = {}\n    self.resource_to_id = {}\n    self.resources = Queue()\n    self.labels = {}\nend\n\nfunction ResourceManager:new_id(resource)\n    self.count = self.count + 1\n\n    return string.format(\"%d-%s\", self.count, resource.type)\nend\n\nfunction ResourceManager:reference(resource)\n    return self.resource_to_id[resource] or self:register(resource)\nend\n\nfunction ResourceManager:resource(reference)\n    return reference and self.id_to_resource[reference]\nend\n\nfunction ResourceManager:register(resource, params)\n    assert(not self.resource_to_id[resource])\n\n    params = params or {}\n\n    local id = params.id or self:new_id(resource)\n    local reference = {resource.name, id, resource}\n\n    self.resource_to_id[resource] = id\n    self.id_to_resource[id] = resource\n\n    self.resources:push(resource)\n\n    if params.label then\n        self.labels[params.label] = id\n    end\n\n    return id\nend\n\nfunction ResourceManager:file(resource, name)\n    local file = string.format(\"%s_%s\", self.resource_to_id[resource], name)\n    local full = self.root .. \"/\" .. file\n\n    return full, file\nend\n\nfunction ResourceManager:path(file)\n    return self.root .. \"/\" .. file\nend\n\nfunction ResourceManager:save()\n    love.filesystem.createDirectory(self.root)\n\n    local bundle = {}\n\n    for resource in self.resources:consume() do\n        local data = {\n            type = resource.type,\n            data = resource:serialise(self)\n        }\n\n        local id = self.resource_to_id[resource]\n        local name = string.format(\"%s.json\", id)\n\n        --local file = love.filesystem.newFile(self.root .. \"/\" .. name, \"w\")\n        --file:write(json.encode(data, { indent = true, }))\n        --file:close()\n\n        bundle[self.resource_to_id[resource]] = data\n    end\n\n    local file = love.filesystem.newFile(self.root .. \"/bundle.json\", \"w\")\n    file:write(json.encode(bundle, { indent = true }))\n\n    local project = self.id_to_resource[self.labels.project]\n    local full, file = self:file(project, \"icon.png\")\n\n    local index = {\n        files = {},\n        labels = self.labels,\n        meta = {\n            name = project.name,\n            description = project.description,\n            icon = file,\n        }\n    }\n\n    project.icon:getImageData():encode(full)\n\n    for id, resource in pairs(self.id_to_resource) do\n        index.files[id] = string.format(\"%s.json\", id)\n    end\n\n    local file = love.filesystem.newFile(self.root .. \"/index.json\", \"w\")\n    file:write(json.encode(index, { indent = true, }))\n    file:close()\nend\n\nfunction ResourceManager:load()\n    local content = love.filesystem.read(self.root .. \"/index.json\")\n    local index = json.decode(content)\n\n    local data = {}\n\n    local content = love.filesystem.read(self.root .. \"/bundle.json\")\n    local bundle = json.decode(content)\n\n    for id, path in pairs(index.files) do\n        --local content = love.filesystem.read(self.root .. \"/\" .. path)\n        --local wrapped = json.decode(content)\n\n        local wrapped = bundle[id]\n\n        local type = wrapped.type and self.types[wrapped.type]\n\n        if type then\n            local resource = type()\n            self:register(resource, { id = id, })\n            data[resource] = wrapped.data\n        else\n            print(\"DESERIALISATION: no matching type (\" .. tostring(wrapped.type) .. \") for \" .. path)\n        end\n    end\n\n    for label, id in pairs(index.labels) do\n        self.labels[label] = self:resource(id)\n    end\n\n    for resource, data in pairs(data) do\n        resource:deserialise(self, data)\n    end\n\n    for resource, data in pairs(data) do\n        resource:finalise(self, data)\n    end\nend\n\nfunction ResourceManager:meta()\n    local content, count = love.filesystem.read(self.root .. \"/index.json\")\n    local index = content and json.decode(content) or {}\n\n    return index.meta or {}\nend\n\nreturn ResourceManager\n",
			"file": "components/resourcemanager.lua",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 4901,
				"line_ending": "Windows"
			}
		},
		{
			"file": "interface/panels/project.lua",
			"settings":
			{
				"buffer_size": 2003,
				"line_ending": "Windows"
			}
		},
		{
			"file": "editor.lua",
			"settings":
			{
				"buffer_size": 14931,
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.lua",
			"settings":
			{
				"buffer_size": 2910,
				"line_ending": "Windows"
			}
		},
		{
			"file": "components/project.lua",
			"settings":
			{
				"buffer_size": 3923,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/love2d.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 153.0,
		"history":
		[
			"view.encoding()"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/engine",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/layers",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/saving",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/texts",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/utilities"
	],
	"file_history":
	[
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Oop/bundle.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/tilemap.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/draw.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/engine/game.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/editor.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/entity.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/init.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/region.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/layers/world.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/layers/layer.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/project.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/region.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tutorial/1-Project.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/project.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/world.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/drag.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/TV_GrinCop_PonNoth/bundle.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Voice/bundle.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/sprites.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/infinite-canvas.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/utilities/sparsegrid.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/ARCHIVE/channel-hopping/renderer.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/init.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/tile.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/pixel.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/resourcemanager.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/edit-handle.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/ARCHIVE/channel-hopping/main.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Ghost_Prom_the_Baijuice_Gange_Growths/bundle.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Icarus_Revue/bundle.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/layers/surface.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/projectselect.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/tileset.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/ecdysis/bundle.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Dollerdat/bundle.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Shark_Awaredy-Cat_Strank/bundle.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Mysterican_Indig/6-Entity.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Mysterican_Indig/51-InfiniteCanvas.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Mysterican_Indig/50-InfiniteCanvas.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/engine/player.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/layers/annotation.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/texts/names.txt",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/tileset.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Diseasurames_Kochc_Kike_Oil/3-AnnotationLayer.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/utilities/infinite-canvas.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/utilities/infinite-canvas",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/tiles.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/panel.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/toolbox.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/wall.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/palette.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/surface.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Crap_Hound/1-Project.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Code/1-Project.json",
		"/C/Users/ragzouken/Downloads/Sink's Fun Pack/Read Me.txt",
		"/C/Users/ragzouken/AppData/Local/Temp/7zOC442.tmp/main.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/toolbar.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/brush.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/notebox.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/button.lua",
		"/C/Users/ragzouken/Downloads/2 NOT GAMES/readme.txt",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/embedded/index.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/embedded/2-SurfaceLayer.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/find the rainbow/2-SurfaceLayer.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/plan.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tools/marker.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/sounds.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/utilities/colour.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/scroll.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/the best game/index.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/generators/sprite.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/layers/scripting.lua",
		"/C/Users/ragzouken/81-C# Script-NewBehaviourScript.cs.txt",
		"/C/Users/ragzouken/Documents/sleeper/dreamer.py",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/components/sprite.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/menubar.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/main.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/Crap_Hound/4-Tileset.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/the best game/2-SurfaceLayer.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/ChQuard_Freepy_Mind/12-AnnotationLayer.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/ChQuard_Freepy_Mind/11-AnnotationLayer.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/ChQuard_Freepy_Mind/3-AnnotationLayer.json",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/ChQuard_Freepy_Mind/10-ScriptingLayer.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tutorial/2-SurfaceLayer.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/b1ecfcbd-312f-4d05-b34e-f00f1fa26b83.dmp",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/newproject.lua",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/kooltoolrial/9-Tileset.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/tutorial/index.json",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/toolbox/sound.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/shapes.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/tabbar.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/grid.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/78641508-d680-432d-bed5-998d4e38398b.dmp",
		"/C/Users/ragzouken/Downloads/playscii-0.1.0/readme.txt",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/project.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/popouts.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/elements/text.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/tabbar.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/interface/panels/toolbox.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/conf.lua",
		"/C/Users/ragzouken/zfont.txt",
		"/C/Users/ragzouken/Downloads/zine 2014-12-25/About  this game.txt",
		"/C/Users/ragzouken/Downloads/Xaxxaxoxax/readme.txt",
		"/C/Users/ragzouken/Downloads/StarlitShootOut/readme.txt",
		"/C/Users/ragzouken/Downloads/74-78-68_Win/74-78-68-README.txt",
		"/C/Users/ragzouken/AppData/Local/Temp/7zOB693.tmp/readme.txt",
		"/C/Users/ragzouken/Downloads/Spacescape/README.txt",
		"/C/Users/ragzouken/Downloads/Ski_Windows/README.txt",
		"/C/Users/ragzouken/Downloads/journey_cont/readme.txt",
		"/C/Users/ragzouken/Downloads/README.txt",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/engine/parse.lua",
		"/C/Users/ragzouken/Downloads/cyberdekay-exp.txt",
		"/C/Users/ragzouken/Google Drive/LOVE/line/quickie/input.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/notes/scripting-reference.txt",
		"/C/Users/ragzouken/Google Drive/LOVE/kooltool/utilities/export.lua",
		"/C/Users/ragzouken/Downloads/edscii_alpha5/readme.txt",
		"/C/Users/ragzouken/Google Drive/LOVE/line/main.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/line/quickie/style-default.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/line/quickie/core.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/line/quickie/group.lua",
		"/C/Users/ragzouken/Google Drive/LOVE/line/quickie/label.lua",
		"/C/Users/ragzouken/Downloads/edscii_alpha5/new",
		"/C/Users/ragzouken/Downloads/fgallery-1.7/fgallery",
		"/C/Users/ragzouken/AppData/Local/Temp/scp37880/srv/ragzouken/var/www/notebook/page0017.jpg",
		"/C/Users/ragzouken/nginx-1.7.8/html/the best game/2-SurfaceLayer.json",
		"/C/Users/ragzouken/nginx-1.7.8/html/index.html",
		"/C/Users/ragzouken/AppData/Roaming/LOVE/kooltool/projects/the best game/32-AnnotationLayer.json",
		"/C/Users/ragzouken/nginx-1.7.8/html/the best game/1-Project.json"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"C:\\Users\\ragzouken\\Google Drive\\LOVE\\kooltool\\saving",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ProjectPanel",
			"setLine",
			"setline",
			"width",
			"stroke",
			"line",
			"lineWidth",
			"linewidth",
			"__tojson",
			"valtojson",
			"encode",
			"peg",
			"pegmatch",
			"metata",
			"objectAt",
			"Tile",
			"last",
			"Wall",
			"surface",
			"world",
			":refresh",
			"\\.bounds",
			":SetCellSize",
			"\\.cell_width",
			".cell_width",
			"._refresh",
			"fag",
			"fuck",
			"kike",
			"common",
			"json",
			"Entity",
			"Sprite",
			"Tileset",
			"tileset.dimensions",
			"tileset.gridsize",
			"gridsiz",
			"tileset.dimensions",
			"dimensions",
			"tilesize",
			"gridsize",
			"SurfaceLayer",
			"elements",
			"Timer",
			"Notebox",
			"Toolbar",
			"applyBrush",
			"editor.active",
			"self.active",
			"tile",
			"removeNotebox",
			"addNotebox",
			"noteboxes",
			"thingbar",
			"PixelPanel",
			"SetProject",
			"setproject",
			"PALETTE",
			"FUCK",
			"tiles",
			"create_tile",
			"TilesPanel",
			":8",
			"select",
			"SoundPanel",
			"TilesPanel",
			"add_tile",
			"tooltip",
			"toolbar",
			"filebar",
			"commentary",
			"options",
			"select",
			"()\n",
			"clip",
			"camera",
			"print\\(",
			"print(",
			"icon",
			"stroke",
			"stoke",
			"stroke",
			"set_tiles",
			"Button",
			"self.panels.tiles.button",
			"self.tiles",
			"event",
			"tilebar",
			"BLOCK_SIZE",
			"toolbar",
			".tile",
			"        \n",
			"toolbar",
			"new",
			"console",
			"trigger",
			"console",
			"locals",
			"tiles",
			"surface",
			"true\"",
			"true",
			"print",
			"floor",
			"tags",
			"Came",
			"project",
			"gener",
			"tooltip",
			"print",
			"]})\n",
			"ProjectPanel",
			"\\sprint\\(",
			"print",
			":transform",
			"\\sprint\\(",
			"\\sprint",
			"\\wprint",
			"print(",
			":transform",
			"print",
			":pivot",
			" }",
			"w = 0",
			"Null",
			"NUll",
			"draw_tree",
			"draw\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Region",
			"world",
			"WorldLayer",
			"PlanPanel",
			"sprites",
			"create_sprite",
			"SpritesPanel",
			":6",
			"SoundsPanel",
			"SoundPanel",
			"line",
			"self.root",
			"save(",
			"resource_to_id",
			"id_to_resource",
			"self.editor.project",
			"self",
			"INTERFACE",
			"Panel",
			"Element",
			"Game",
			"MODE",
			"controls",
			"padding",
			"Tilebar",
			"Pane",
			"Wall",
			"Type",
			"Marker",
			"Tile",
			"tools",
			"Tool",
			"InterfaceWrong",
			"Draw",
			"Drag",
			"(unpack(test_",
			"local test_",
			"",
			"colors.",
			"assert_tuples_close",
			"function husl.",
			"ObjectMode",
			"colour.cursor(0)",
			"AnnotateMode",
			"AnnotationLayer",
			"SurfaceLayer:serialise_entity",
			"self",
			"SurfaceLayer",
			"PROJECT.layers.surface.collider",
			"self.layer",
			"    ",
			"/",
			"$",
			"me",
			"kooltool",
			"",
			"\\n",
			"",
			"\"0\"",
			"0",
			"false",
			"state",
			"NoteLayer",
			"CAMERA",
			"brush",
			"tilelayer",
			"TileLayer",
			"MAP",
			"tiles",
			"Transform",
			"love.math.random",
			"Sensor"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "engine/player.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5442,
						"regions":
						{
						},
						"selection":
						[
							[
								4694,
								4694
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3442.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2317,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										257,
										269
									],
									[
										514,
										526
									],
									[
										792,
										804
									],
									[
										945,
										957
									],
									[
										1109,
										1121
									],
									[
										1281,
										1293
									],
									[
										1427,
										1439
									],
									[
										1583,
										1595
									],
									[
										1761,
										1773
									],
									[
										1827,
										1839
									],
									[
										1987,
										1999
									],
									[
										2190,
										2202
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "components/resourcemanager.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4901,
						"regions":
						{
						},
						"selection":
						[
							[
								2615,
								2615
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1995.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "interface/panels/project.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2003,
						"regions":
						{
						},
						"selection":
						[
							[
								641,
								641
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "editor.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14931,
						"regions":
						{
						},
						"selection":
						[
							[
								9207,
								9207
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3445.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2910,
						"regions":
						{
						},
						"selection":
						[
							[
								2456,
								2456
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1539.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "components/project.lua",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3923,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 912.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 243.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "kooltool.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"tileset",
				"components\\tileset.lua"
			],
			[
				"annot",
				"layers\\annotation.lua"
			],
			[
				"main",
				"main.lua"
			],
			[
				"panel",
				"interface\\elements\\panel.lua"
			],
			[
				"text",
				"interface\\elements\\text.lua"
			],
			[
				"",
				"engine\\game.lua"
			],
			[
				"nocanvas",
				"utilities\\nocanvas.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 35.0,
		"selected_items":
		[
			[
				"Resource",
				"ResourceManager:init"
			],
			[
				"SetTileset",
				"SurfaceLayer:SetTileset"
			],
			[
				"project",
				"project"
			],
			[
				"testser",
				"AnnotationLayer:testser"
			],
			[
				"NOCANVAS",
				"common.loadCanvas"
			]
		],
		"width": 456.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
